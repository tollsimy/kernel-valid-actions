name: cross compile and run kselftests

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    env:
      CROSS_COMPILE: riscv64-linux-gnu-
      ARCH: riscv
    steps:
      - uses: actions/checkout@v4
      - name: install prerequisites
        run: |
          apt-get update
          apt-get install --no-install-recommends -y \
            build-essential \
            ca-certificates \
            git \
            libncurses-dev \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            bc \
            curl \
            gcc-riscv64-linux-gnu \
            libc6-dev-riscv64-cross \
            linux-tools-common \
            libcap-dev \
            libnuma-dev \
            libmount-dev \
            libpopt-dev \
            libbpf-dev \
            python3-docutils \
            nftables \
            bridge-utils \
            ethtool \
            iproute2 \
            iptables \
            net-tools \
            acl \
            attr \
            trace-cmd \
            python3-pip \
            mmdebstrap \
            fuse \
            libfuse-dev \
            rsync \
            libasound2-dev \
            libmnl-dev \
            libnetfilter-queue-dev \
            jq \
            clang \
            cpio \
            qemu-system-riscv64 \
            opensbi
      - name: clone sources
        run: |
          git clone git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git --depth 1
      - name: build kernel
        run: |
          cd linux
          make defconfig
          make -j$(nproc)
      - name: build kselftest
        run: |
          cd linux
          make -j$(nproc) kselftest-install
      - name: create initram
        run: |
          curl -o fedora-container.tar.xz https://dl.fedoraproject.org/pub/alt/risc-v/release/41/Container/riscv64/images/Fedora-Container-Base-Generic-41.20250128.riscv64.oci.tar.xz
          tar -xf fedora-container.tar.xz
          rm fedora-container.tar.xz
          digest="blobs/$(jq .manifests[0].digest -r < index.json | sed 's/:/\//')"
          rootfs_tar="blobs/$(jq .layers[0].digest -r $digest | sed 's/:/\//')"
          mkdir -p initramfs-fedora/{bin,sbin,etc,proc,sys,usr/{bin,sbin}}
          tar -xf $rootfs_tar -C initramfs-fedora
          mkdir -p initramfs-fedora/selftests/
          cp -a linux/tools/testing/selftests/kselftest_install/* initramfs-fedora/selftests/
          cp init initramfs-fedora/
          chmod +x initramfs-fedora/init
          cd initramfs-fedora
          find . -print0 | cpio --null -ov --format=newc | gzip -9 > ../initramfs-fedora.cpio.gz
    #   - name: busybox
    #     run: |
    #       curl https://busybox.net/downloads/busybox-1.37.0.tar.bz2 | tar xjf -
    #       cp busybox_riscv_virt_defconfig busybox-1.37.0/configs/riscv_virt_defconfig
    #       cd busybox-1.37.0
    #       make riscv_virt_defconfig
    #       LDFLAGS="--static" make -j$(nproc)
    #       make install
    #       cd ..
    #       mkdir -p initramfs/{bin,sbin,etc,proc,sys,usr/{bin,sbin}}
    #       cp -a busybox-1.37.0/_install/* initramfs/
    #       cp init initramfs/
    #       chmod +x initramfs/init
    #       cd initramfs
    #       find . -print0 | cpio --null -ov --format=newc | gzip -9 > ../initramfs.cpio.gz
      - name: run kselftest on QEMU
        run: |
          qemu-system-riscv64 -nographic -m 512 -machine virt \
          -bios /usr/lib/riscv64-linux-gnu/opensbi/generic/fw_jump.elf \
          -kernel linux/arch/riscv/boot/Image -append "console=ttyS0 root=/dev/ram" \
          -initrd initramfs-fedora.cpio.gz
          - name: Package artifacts
          run: |
            # Create a directory for artifacts
            mkdir -p artifacts
            # Copy kernel and initramfs
            cp linux/arch/riscv/boot/Image artifacts/
            cp initramfs-fedora.cpio.gz artifacts/
            # Create a tarball
            tar -czvf kernel-artifacts.tar.gz artifacts/
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Build ${{ github.run_number }}
          body: |
            RISC-V Kernel and Initramfs build ${{ github.run_number }}
            Built from commit: ${{ github.sha }}
          draft: false
          prerelease: false
      
      - name: Upload artifacts to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./kernel-artifacts.tar.gz
          asset_name: kernel-artifacts.tar.gz
          asset_content_type: application/gzip